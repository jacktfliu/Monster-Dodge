/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var canvas = document.getElementById('canvas');\n  var ctx = canvas.getContext('2d');\n  canvas.width = 1000;\n  canvas.heigth = 600;\n  var keys = [];\n  var ifritMovements = ['up', 'top right', 'right', 'down right', 'down'];\n  var numOfIfrit = 10;\n  var ifritBot = [];\n  var player = {\n    x: 200,\n    y: 200,\n    width: 32,\n    height: 48,\n    fx: 0,\n    fy: 0,\n    speed: 5,\n    moving: false\n  };\n  var dragon = {\n    x: 0,\n    y: 0,\n    width: 142,\n    height: 142,\n    fx: 0,\n    fy: 0,\n    speed: 4\n  };\n  var leviathan = {\n    x: 300,\n    y: 300,\n    width: 177.5,\n    height: 177.5,\n    fx: 0,\n    fy: 0,\n    speed: 4\n  }; // const phoenix = {\n  //     x: 200,\n  //     y: 200,\n  //     width: 142,\n  //     height: 142,\n  //     fx: 0,\n  //     fy: 0,\n  //     speed: 4,\n  // }\n\n  var deathScythe = {\n    x: 200,\n    y: 200,\n    width: 50,\n    height: 48,\n    fx: 0,\n    fy: 0,\n    speed: 4\n  };\n  var playerChar = document.getElementById('player');\n  var dragonTarget = document.getElementById('dragon');\n  var leviathanTarget = document.getElementById('leviathan'); // const phoenix = document.getElementById('phoenix')\n\n  var deathScytheTarget = document.getElementById('death-scythe');\n  var ifritTarget = document.getElementById('ifrit');\n\n  function drawPlayer(imgfile, sX, sY, sW, sH, dX, dY, dW, dH) {\n    ctx.drawImage(imgfile, sX, sY, sW, sH, dX, dY, dW, dH);\n  }\n\n  function animatePlayer() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height); //player sprite\n\n    drawPlayer(playerChar, player.width * player.fx, player.height * player.fy, player.width, player.height, player.x, player.y, player.width, player.height); //leviathan sprite\n\n    ctx.drawImage(leviathanTarget, leviathan.width * leviathan.fx, leviathan.height * leviathan.fy, leviathan.width, leviathan.height, leviathan.x, leviathan.y, leviathan.width, leviathan.height); //leviathan movement\n\n    if (leviathan.fx < 3) {\n      leviathan.fx++;\n    } else {\n      leviathan.fx = 1, leviathan.fy = 2;\n    } // move leviathan \n\n\n    if (leviathan.x < canvas.width + leviathan.width) {\n      leviathan.x += leviathan.speed;\n    } else {\n      leviathan.x = 0 - leviathan.width;\n    } //deathScythe sprite\n\n\n    ctx.drawImage(deathScytheTarget, deathScythe.width * deathScythe.fx, deathScythe.height * deathScythe.fy, deathScythe.width, deathScythe.height, deathScythe.x, deathScythe.y, deathScythe.width, deathScythe.height); //deathScythe movement\n\n    if (deathScythe.fx < 3) {\n      deathScythe.fx++;\n    } else {\n      deathScythe.fx = 0, deathScythe.fy = 2;\n    } // move deathScythe \n\n\n    if (deathScythe.x < canvas.width + deathScythe.width) {\n      deathScythe.x += deathScythe.speed;\n    } else {\n      deathScythe.x = 0 - deathScythe.width;\n    } //ifrit sprite\n\n\n    ctx.drawImage(ifritTarget, ifrit.width * ifrit.fx, ifrit.height * ifrit.fy, ifrit.width, ifrit.height, ifrit.x, ifrit.y, ifrit.width, ifrit.height); //ifrit movement\n\n    if (ifrit.fx < 3) {\n      ifrit.fx++;\n    } else {\n      ifrit.fx = 0, ifrit.fy = 2;\n    } // move ifrit \n\n\n    if (ifrit.x < canvas.width + ifrit.width) {\n      ifrit.x += ifrit.speed;\n    } else {\n      ifrit.x = 0 - ifrit.width;\n    }\n\n    for (i = 0; i < ifritBot.length; i++) {\n      ifritBot[i].drawIfrit();\n      ifritBot[i].updateIfritMovement();\n    } //dragon sprite\n\n\n    ctx.drawImage(dragonTarget, dragon.width * dragon.fx, dragon.height * dragon.fy, dragon.width, dragon.height, dragon.x, dragon.y, dragon.width, dragon.height); //dragon movement\n\n    if (dragon.fx < 3) {\n      dragon.fx++;\n    } else {\n      dragon.fx = 0, dragon.fy = 2;\n    } // move draogn \n\n\n    if (dragon.x < canvas.width + dragon.width) {\n      dragon.x += dragon.speed;\n    } else {\n      dragon.x = 0 - dragon.width;\n    }\n\n    moveChar();\n    handlePlayerF();\n    requestAnimationFrame(animatePlayer);\n  }\n\n  window.addEventListener('keydown', function (e) {\n    keys[e.keyCode] = true;\n    player.moving = true;\n  });\n  window.addEventListener('keyup', function (e) {\n    delete keys[e.keyCode];\n    player.moving = false;\n  }); //player control \n\n  function moveChar() {\n    if (keys[38] && player.y > 0) {\n      player.y -= player.speed;\n      player.fy = 3;\n    } else if (keys[37] && player.x > 0) {\n      player.x -= player.speed;\n      player.fy = 1;\n    } else if (keys[40] && player.y < canvas.heigth - player.height) {\n      player.y += player.speed;\n      player.fy = 0;\n    } else if (keys[39] && player.x < canvas.width - player.width) {\n      player.x += player.speed;\n      player.fy = 2;\n    }\n  } // player aniamtion movement\n\n\n  function handlePlayerF() {\n    if (player.fx < 3 && player.moving) {\n      player.fx++;\n    } else {\n      player.fx = 0;\n    }\n  }\n\n  function update() {\n    animatePlayer();\n  } //ifrit movements\n\n\n  var Ifrit = /*#__PURE__*/function () {\n    function Ifrit() {\n      _classCallCheck(this, Ifrit);\n\n      this.width = 80;\n      this.height = 80;\n      this.frameX = 3;\n      this.x = Math.random() * canvas.width - this.width;\n      this.y = Math.random() * canvas.height - this.height;\n      this.speed = Math.random() * 2 + 3;\n      this.minFrame = 0;\n      this.action = ifritMovements[Math.floor(Math.random() * ifritMovements.length)];\n\n      if (this.action === 'up') {\n        this.frameY = 0;\n        this.minFrame = 0;\n        this.maxFrame = 3;\n      } else if (this.action === 'right') {\n        this.frameY = 0;\n        this.minFrame = 0;\n        this.maxFrame = 3;\n      } else if (this.action === 'down') {\n        this.minFrame = 0;\n        this.frameY = 0;\n        this.maxFrame = 3;\n      }\n    }\n\n    _createClass(Ifrit, [{\n      key: \"drawIfrit\",\n      value: function drawIfrit() {\n        drawPlayer(ifritTarget, this.width * this.frameX, this.height * this.frameY, this.width, this.height, this.x, this.y, this.width * 1.5, this.height * 1.5);\n        if (this.frameX < this.maxFrame) this.frameX++;else this.frameX = this.minFrame;\n      }\n    }, {\n      key: \"updateIfritMovement\",\n      value: function updateIfritMovement() {\n        if (this.action === 'up') {\n          if (this.y < 0 - this.height * 5) {\n            this.y = canvas.height + this.height;\n            this.x = Math.random() * canvas.width;\n            this.speed = Math.random() * 2 + 3;\n          } else {\n            this.y -= this.speed;\n          }\n        } else if (this.action === 'right') {\n          if (this.x > canvas.width + this.width * 5) {\n            this.x = 0 - this.width;\n            this.y = Math.random() * canvas.height;\n            this.speed = Math.random() * 2 + 3;\n          } else {\n            this.x += this.speed;\n          }\n        } else if (this.action === 'down') {\n          if (this.y > canvas.height + this.height * 5) {\n            this.y = 0 - this.height;\n            this.x = Math.random() * canvas.width;\n            this.speed = Math.random() * 2 + 3;\n          } else {\n            this.y += this.speed;\n          }\n        }\n      }\n    }]);\n\n    return Ifrit;\n  }();\n\n  for (i = 0; i < numOfIfrit; i++) {\n    ifritBot.push(new Ifrit());\n  }\n\n  update();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/stylesheets/index.scss":
/*!************************************!*\
  !*** ./src/stylesheets/index.scss ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbGluZ3Nob3QvLi9zcmMvc3R5bGVzaGVldHMvaW5kZXguc2Nzcz8yMzFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSIsImZpbGUiOiIuL3NyYy9zdHlsZXNoZWV0cy9pbmRleC5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/stylesheets/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/stylesheets/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;