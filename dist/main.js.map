{"version":3,"sources":["webpack://slingshot/./src/index.js"],"names":["document","addEventListener","canvas","getElementById","ctx","getContext","width","heigth","keys","ifritMovements","ifritBot","dragonMovement","dragonBot","deathScytheMovement","DeathScytheBot","score","gameOver","playerChar","dragonTarget","deathScytheTarget","ifritTarget","player","x","y","height","fx","fy","speed","moving","drawPlayer","img","sX","sY","sW","sH","dX","dY","dW","dH","drawImage","collision","first","second","animatePlayer","clearRect","i","length","drawDeath","updateDeathMovement","drawIfrit","updateIfritMovement","drawDragon","updateDragonMovement","font","fillStyle","fillText","requestAnimationFrame","window","e","keyCode","Ifrit","this","Math","random","action","floor","minFrame","maxFrame","push","Dragon","DeathScythe"],"mappings":"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","file":"main.js","sourcesContent":["\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = 1000;\n    canvas.heigth = 600;\n\n    const keys = [];\n    const ifritMovements = ['up','right', 'left', 'down'];\n    const numOfIfrit = 5;\n    const ifritBot = [];\n\n    const dragonMovement = ['up','right', 'left', 'down'];\n    const numOfDragon = 3;\n    const dragonBot = [];\n\n    const deathScytheMovement = ['up','right', 'left', 'down'];\n    const numOfDeathScythe = 8;\n    const DeathScytheBot = [];\n\n    let score = 0;\n    let gameOver = false;\n    let gameStart = false;\n\n    const playerChar = document.getElementById('player')\n    const dragonTarget = document.getElementById('dragon')\n    const deathScytheTarget = document.getElementById('death-scythe')\n    const ifritTarget = document.getElementById('ifrit')   \n    \n    \n    const player = {\n        x: 200,\n        y: 200,\n        width: 32,\n        height: 48,\n        fx: 0,\n        fy: 0,\n        speed: 5,\n        moving: false\n    }\n\n    function game(){\n\n    }\n\n    function drawPlayer(img, sX, sY, sW, sH, dX, dY, dW, dH){\n        ctx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n    }\n\n    function animatePlayer(){\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n        //player sprite\n        drawPlayer(playerChar, player.width * player.fx, player.height * player.fy, player.width, player.height, \n        player.x, player.y, player.width, player.height);\n\n        for (i = 0; i < DeathScytheBot.length; i++ ){\n            DeathScytheBot[i].drawDeath();\n            DeathScytheBot[i].updateDeathMovement();\n        }\n\n        for (i = 0; i < ifritBot.length; i++ ){\n            ifritBot[i].drawIfrit();\n            ifritBot[i].updateIfritMovement();\n        }\n\n        for (i = 0; i < dragonBot.length; i++ ){\n            dragonBot[i].drawDragon();\n            dragonBot[i].updateDragonMovement();\n        }\n\n        drawScore()\n        handleGameStatus()\n        moveChar();\n        handlePlayerF();\n        if (!gameOver){\n            requestAnimationFrame(animatePlayer);\n        } \n    }\n\n    animatePlayer();  \n\n    function drawScore(){\n        ctx.font = \"18px Arial\";\n        ctx.fillStyle = \"#black\";\n        ctx.fillText(\"Score: \"+score, 20, 25);\n    }\n\n    window.addEventListener('keydown', function(e){\n        keys[e.keyCode] = true;\n        player.moving = true;\n    })\n    \n    window.addEventListener('keyup', function(e){\n        delete keys[e.keyCode];\n        player.moving = false;\n    })\n  \n    //player control \n    function moveChar(){\n        if (keys[38] && player.y > 0){\n            player.y -= player.speed\n            player.fy = 3\n        } else if (keys[37] && player.x > 0){\n            player.x -= player.speed\n            player.fy = 1\n        } else if (keys[40] && player.y < canvas.heigth - player.height){\n            player.y += player.speed\n            player.fy = 0\n        } else if (keys[39] && player.x < canvas.width - player.width){\n            player.x += player.speed\n            player.fy = 2\n        }\n    }\n\n    // player aniamtion movement\n    function handlePlayerF(){\n        if (player.fx < 3 && player.moving){\n            player.fx++\n        } else {\n            player.fx = 0\n        }\n    }\n\n    //collision function\n    function collision(first, second){\n        if ( !(first.x > second.x + second.width ||\n                first.x  + first.width < second.x || \n                first.y > second.y + second.height ||\n                first.y + first.height < second.y)\n        ){\n            return true\n        } else {\n            (score++ / 100);\n        }\n    }\n\n    // handlegame \n    function handleGameStatus(){\n        if (gameOver){\n            ctx.fillStyle = 'black';\n            ctx.font = '90px Orbitron';\n            ctx.fillText('GAME OVER', 230, 300);\n            ctx.fillStyle = 'white';\n            ctx.font = '40px Orbitron';\n            ctx.fillText('Your Score is:'+ \" \" +score, 345, 400);            \n        }\n    }\n\n    //ifrit movements\n    class Ifrit {\n        constructor(){\n            this.width = 40;\n            this.height = 56;\n            this.fx = 0;\n            this.x = Math.random() * canvas.width - this.width;\n            this.y = Math.random() * canvas.height - this.height;\n            this.speed = (Math.random() * 3) + 2;\n            this.action = ifritMovements[Math.floor(Math.random() * ifritMovements.length)];\n            if (this.action === 'up') {\n                this.fy = 3; \n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'right') {\n                this.fy = 2; \n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'down') {\n                this.fy = 0;\n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'left') {\n                this.fy = 1;\n                this.minFrame = 0;\n                this.maxFrame = 3\n            }\n\n        }\n\n        drawIfrit(){\n            drawPlayer(ifritTarget, this.width * this.fx, this.height * this.fy, this.width, this.height, this.x, this.y, this.width * 1.5, this.height * 1.5);\n            \n            if (collision(player, this)){\n                gameOver = true;\n            }\n            if (this.fx < this.maxFrame){\n                this.fx++\n            } else {\n                this.fx = this.minFrame\n            }\n        }\n\n        updateIfritMovement(){\n            if (this.action === 'up') {\n                if (this.y < 0 - (this.height * 5)) {\n                    this.y = canvas.height + this.height;\n                    this.x = Math.random() * canvas.width;\n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.y -= this.speed;  \n                }\n            }\n            else if (this.action === 'right') {\n                if (this.x > canvas.width + (this.width * 5)) {\n                    this.x = 0 - this.width;\n                    this.y = Math.random() * canvas.height; \n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.x += this.speed; \n                }\n            } \n            else if (this.action ==='left'){\n                if (this.x > canvas.width + (this.width * 5)) {\n                    this.x = 0 + this.width;\n                    this.y = Math.random() * canvas.height; \n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.x -= this.speed\n                }\n            } \n            else if (this.action === 'down') {\n                if (this.y > canvas.height + (this.height * 5)) {\n                    this.y = 0 - this.height;\n                    this.x = Math.random() * canvas.width;\n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.y += this.speed;  \n                }\n            }\n        }\n    }\n\n    for (i = 0; i < numOfIfrit; i++){\n        ifritBot.push(new Ifrit());\n    }\n\n    // dragon \n\n    class Dragon {\n        constructor(){\n            this.width = 142;\n            this.height = 142;\n            this.fx = 0;\n            this.x = Math.random() * canvas.width - this.width;\n            this.y = Math.random() * canvas.height - this.height;\n            this.speed = (Math.random() * 3) + 2;\n            this.action = dragonMovement[Math.floor(Math.random() * dragonMovement.length)];\n            if (this.action === 'up') {\n                this.fy = 3; \n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'right') {\n                this.fy = 2; \n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'down') {\n                this.fy = 0;\n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'left') {\n                this.fy = 1;\n                this.minFrame = 0;\n                this.maxFrame = 3\n            }\n\n        }\n\n        drawDragon(){\n            drawPlayer(dragonTarget, this.width * this.fx, this.height * this.fy, this.width, this.height, this.x, this.y, this.width * 1.5, this.height * 1.5);\n            \n            if (collision(player, this)){\n                gameOver = true;\n            }\n            if (this.fx < this.maxFrame){\n                this.fx++\n            } else {\n                this.fx = this.minFrame\n            }\n        }\n\n        updateDragonMovement(){\n            if (this.action === 'up') {\n                if (this.y < 0 - (this.height * 5)) {\n                    this.y = canvas.height + this.height;\n                    this.x = Math.random() * canvas.width;\n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.y -= this.speed;  \n                }\n            }\n            else if (this.action === 'right') {\n                if (this.x > canvas.width + (this.width * 5)) {\n                    this.x = 0 - this.width;\n                    this.y = Math.random() * canvas.height; \n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.x += this.speed; \n                }\n            } \n            else if (this.action ==='left'){\n                if (this.x > canvas.width + (this.width * 5)) {\n                    this.x = 0 + this.width;\n                    this.y = Math.random() * canvas.height; \n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.x -= this.speed\n                }\n            } \n            else if (this.action === 'down') {\n                if (this.y > canvas.height + (this.height * 5)) {\n                    this.y = 0 - this.height;\n                    this.x = Math.random() * canvas.width;\n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.y += this.speed;  \n                }\n            }\n        }\n    }\n\n    for (i = 0; i < numOfDragon; i++){\n        dragonBot.push(new Dragon());\n    }\n\n\n    // DeathScythe\n\n    class DeathScythe {\n        constructor(){\n            this.width = 50;\n            this.height = 48;\n            this.fx = 0;\n            this.x = Math.random() * canvas.width - this.width;\n            this.y = Math.random() * canvas.height - this.height;\n            this.speed = (Math.random() * 3) + 2;\n            this.action = deathScytheMovement[Math.floor(Math.random() * deathScytheMovement.length)];\n            if (this.action === 'up') {\n                this.fy = 3; \n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'right') {\n                this.fy = 2; \n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'down') {\n                this.fy = 0;\n                this.minFrame = 0;\n                this.maxFrame = 3;\n            }\n            else if (this.action === 'left') {\n                this.fy = 1;\n                this.minFrame = 0;\n                this.maxFrame = 3\n            }\n\n        }\n\n        drawDeath(){\n            drawPlayer(deathScytheTarget, this.width * this.fx, this.height * this.fy, this.width, this.height, this.x, this.y, this.width * 1.5, this.height * 1.5);\n            \n            if (collision(player, this)){\n                gameOver = true;\n            }\n\n            if (this.fx < this.maxFrame){\n                this.fx++\n            } else {\n                this.fx = this.minFrame\n            }\n        }\n\n        updateDeathMovement(){\n            if (this.action === 'up') {\n                if (this.y < 0 - (this.height * 5)) {\n                    this.y = canvas.height + this.height;\n                    this.x = Math.random() * canvas.width;\n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.y -= this.speed;  \n                }\n            }\n            else if (this.action === 'right') {\n                if (this.x > canvas.width + (this.width * 5)) {\n                    this.x = 0 - this.width;\n                    this.y = Math.random() * canvas.height; \n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.x += this.speed; \n                }\n            } \n            else if (this.action ==='left'){\n                if (this.x > canvas.width + (this.width * 5)) {\n                    this.x = 0 + this.width;\n                    this.y = Math.random() * canvas.height; \n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.x -= this.speed\n                }\n            } \n            else if (this.action === 'down') {\n                if (this.y > canvas.height + (this.height * 5)) {\n                    this.y = 0 - this.height;\n                    this.x = Math.random() * canvas.width;\n                    this.speed = (Math.random() * 3) + 2;\n                } else {\n                    this.y += this.speed;  \n                }\n            }\n        }\n    }\n\n    for (i = 0; i < numOfDeathScythe; i++){\n        DeathScytheBot.push(new DeathScythe());\n    }\n\n})"],"sourceRoot":""}